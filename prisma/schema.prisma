generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  applicant_id       Int                  @id @default(autoincrement())
  curp               String               @unique
  hashed_password    String
  isActive           Boolean
  roles              String[]
  ApplicantDocuments ApplicantDocuments[]
}

model Student {
  student_id      Int      @id @default(autoincrement())
  control_number  String   @unique
  hashed_password String
  isActive        Boolean
  roles           String[]
}

model Teacher {
  teacher_id      Int      @id @default(autoincrement())
  teacher_number  String   @unique
  hashed_password String
  isActive        Boolean
  roles           String[]
}

model Session {
  id        BigInt   @id @default(autoincrement())
  userId    String // Puede ser curp, control_number, o teacher_number
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model PersonalData {
  personal_data_id Int            @id @default(autoincrement())
  userId           String         @unique
  first_name       String
  last_name        String
  birth_date       DateTime
  address          String
  phone_number     String
  email            String         @unique
  ProfilePicture    ProfilePicture?

  @@index([first_name, last_name])
}

model ProfilePicture {
  profile_picture_id Int          @id @default(autoincrement())
  s3_key           String
  upload_date      DateTime     @default(now())
  personal_data_id Int          @unique
  PersonalData     PersonalData @relation(fields: [personal_data_id], references: [personal_data_id])
}

model ApplicantDocuments {
  applicant_document_id Int        @id @default(autoincrement())
  file_name             String
  file_type             String
  category              String
  s3_key                String
  upload_date           DateTime   @default(now())
  applicant_id          Int?
  Applicant             Applicant? @relation(fields: [applicant_id], references: [applicant_id])
}
