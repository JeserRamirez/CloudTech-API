generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model APPLICANT {
  id_applicant  Int     @id @default(autoincrement())
  id_course     String? @db.VarChar
  id_Competence String? @db.VarChar
  id_student    String? @db.VarChar
  grade         Int?
  faults        Int?
  percentage    String? @db.VarChar
}

model ASSIGN_DATA_SUBJECT {
  id_assing_data_Subject                          String                                            @id @db.VarChar
  id_init_data_subject                            String?                                           @db.VarChar
  id_subject_plan_relation                        String?                                           @db.VarChar
  id_group                                        String?                                           @db.VarChar
  id_sd_number_control                            String?                                           @db.VarChar
  id_teacher_number                               String?                                           @db.VarChar
  current_period                                  String?                                           @db.VarChar
  ASSIGN_DATA_SUBJECT_ASSIGN_GENERAL_DATA_SUBJECT ASSIGN_DATA_SUBJECT_ASSIGN_GENERAL_DATA_SUBJECT[]
  ASSIGN_DATA_SUBJECT_ASSIGN_INITIAL_DATA_SUBJECT ASSIGN_DATA_SUBJECT_ASSIGN_INITIAL_DATA_SUBJECT[]
}

model ASSIGN_DATA_SUBJECT_ASSIGN_GENERAL_DATA_SUBJECT {
  ASSIGN_DATA_SUBJECT_id_assing_data_Subject         String              @db.VarChar
  ASSIGN_GENERAL_DATA_SUBJECT_id_assing_data_Subject String              @db.VarChar
  ASSIGN_DATA_SUBJECT                                ASSIGN_DATA_SUBJECT @relation(fields: [ASSIGN_DATA_SUBJECT_id_assing_data_Subject], references: [id_assing_data_Subject], onDelete: NoAction, onUpdate: NoAction, map: "ASSIGN_DATA_SUBJECT_ASSIGN_GE_ASSIGN_DATA_SUBJECT_id_assin_fkey")

  @@id([ASSIGN_DATA_SUBJECT_id_assing_data_Subject, ASSIGN_GENERAL_DATA_SUBJECT_id_assing_data_Subject])
}

model ASSIGN_DATA_SUBJECT_ASSIGN_INITIAL_DATA_SUBJECT {
  ASSIGN_DATA_SUBJECT_id_assing_data_Subject         String              @db.VarChar
  ASSIGN_INITIAL_DATA_SUBJECT_id_assing_data_Subject String              @db.VarChar
  ASSIGN_DATA_SUBJECT                                ASSIGN_DATA_SUBJECT @relation(fields: [ASSIGN_DATA_SUBJECT_id_assing_data_Subject], references: [id_assing_data_Subject], onDelete: NoAction, onUpdate: NoAction, map: "ASSIGN_DATA_SUBJECT_ASSIGN_IN_ASSIGN_DATA_SUBJECT_id_assin_fkey")

  @@id([ASSIGN_DATA_SUBJECT_id_assing_data_Subject, ASSIGN_INITIAL_DATA_SUBJECT_id_assing_data_Subject])
}

model ASSIGN_GENERAL_DATA_SUBJECT {
  id_competence                              String                                       @id @db.VarChar
  id_assing_data_Subject                     String?                                      @db.VarChar
  id_subject_plan_relation                   String?                                      @db.VarChar
  ASSIGN_GENERAL_DATA_SUBJECT_APPLICANT      ASSIGN_GENERAL_DATA_SUBJECT_APPLICANT[]
  ASSIGN_GENERAL_DATA_SUBJECT_GRADES_CURRENT ASSIGN_GENERAL_DATA_SUBJECT_GRADES_CURRENT[]
}

model ASSIGN_GENERAL_DATA_SUBJECT_APPLICANT {
  ASSIGN_GENERAL_DATA_SUBJECT_id_competence String                      @db.VarChar
  APPLICANT_id_Competence                   String                      @db.VarChar
  ASSIGN_GENERAL_DATA_SUBJECT               ASSIGN_GENERAL_DATA_SUBJECT @relation(fields: [ASSIGN_GENERAL_DATA_SUBJECT_id_competence], references: [id_competence], onDelete: NoAction, onUpdate: NoAction, map: "ASSIGN_GENERAL_DATA_SUBJECT_A_ASSIGN_GENERAL_DATA_SUBJECT__fkey")

  @@id([ASSIGN_GENERAL_DATA_SUBJECT_id_competence, APPLICANT_id_Competence])
}

model ASSIGN_GENERAL_DATA_SUBJECT_GRADES_CURRENT {
  ASSIGN_GENERAL_DATA_SUBJECT_id_competence String                      @db.VarChar
  GRADES_CURRENT_id_Competence              String                      @db.VarChar
  ASSIGN_GENERAL_DATA_SUBJECT               ASSIGN_GENERAL_DATA_SUBJECT @relation(fields: [ASSIGN_GENERAL_DATA_SUBJECT_id_competence], references: [id_competence], onDelete: NoAction, onUpdate: NoAction, map: "ASSIGN_GENERAL_DATA_SUBJECT_G_ASSIGN_GENERAL_DATA_SUBJECT__fkey")

  @@id([ASSIGN_GENERAL_DATA_SUBJECT_id_competence, GRADES_CURRENT_id_Competence])
}

model ASSIGN_INITIAL_DATA_SUBJECT {
  id_assign_initial_data_subject Int     @id @default(autoincrement())
  id_assing_data_Subject         String? @db.VarChar
  id_subject_plan_relation       String? @db.VarChar
  Characterization               String? @db.VarChar
  Didactics                      String? @db.VarChar
  Competence_specify             String? @db.VarChar
}

model CAREER {
  id_career   String    @id @db.VarChar
  career_name String?   @db.VarChar
  modality    String?   @db.VarChar
  STUDENT     STUDENT[]
}

model COMPETENCE_EDIT {
  id_competence_edit  Int     @id @default(autoincrement())
  id_competence       String? @db.VarChar
  Description         String? @db.VarChar
  Topics_and_Sub      String? @db.VarChar
  Activities_learning String? @db.VarChar
  Activities_teaching String? @db.VarChar
  Competence_Generic  String? @db.VarChar
  Theorical           String? @db.VarChar
  Practice            String? @db.VarChar
  Scope_Indicators    String? @db.VarChar
  Value               Int?
}

model COMPLEMENTARY {
  id_complementary      String                  @id @db.VarChar
  activity_name         String?                 @db.VarChar
  period                String?                 @db.VarChar
  credits               String?                 @db.VarChar
  STUDENT_SEMESTER_DATA STUDENT_SEMESTER_DATA[]
}

model COURSE_FOLLOWING_GRADES {
  id_course                              String                                   @id @db.VarChar
  id_assing_data_Subject                 String?                                  @db.VarChar
  COURSE_FOLLOWING_GRADES_APPLICANT      COURSE_FOLLOWING_GRADES_APPLICANT[]
  COURSE_FOLLOWING_GRADES_GRADES_CURRENT COURSE_FOLLOWING_GRADES_GRADES_CURRENT[]
}

model COURSE_FOLLOWING_GRADES_APPLICANT {
  COURSE_FOLLOWING_GRADES_id_course String                  @db.VarChar
  APPLICANT_id_course               String                  @db.VarChar
  COURSE_FOLLOWING_GRADES           COURSE_FOLLOWING_GRADES @relation(fields: [COURSE_FOLLOWING_GRADES_id_course], references: [id_course], onDelete: NoAction, onUpdate: NoAction, map: "COURSE_FOLLOWING_GRADES_APPLI_COURSE_FOLLOWING_GRADES_id_c_fkey")

  @@id([COURSE_FOLLOWING_GRADES_id_course, APPLICANT_id_course])
}

model COURSE_FOLLOWING_GRADES_GRADES_CURRENT {
  COURSE_FOLLOWING_GRADES_id_course String                  @db.VarChar
  GRADES_CURRENT_id_course          String                  @db.VarChar
  COURSE_FOLLOWING_GRADES           COURSE_FOLLOWING_GRADES @relation(fields: [COURSE_FOLLOWING_GRADES_id_course], references: [id_course], onDelete: NoAction, onUpdate: NoAction, map: "COURSE_FOLLOWING_GRADES_GRADE_COURSE_FOLLOWING_GRADES_id_c_fkey")

  @@id([COURSE_FOLLOWING_GRADES_id_course, GRADES_CURRENT_id_course])
}

model GENERAL_COMPETENCE_EDIT {
  id_general_competence_edit Int     @id @default(autoincrement())
  competence_theme           String? @db.VarChar
  Description                String? @db.VarChar
  Topics_and_Sub             String? @db.VarChar
  Activities_learning        String? @db.VarChar
  Activities_teaching        String? @db.VarChar
  Competence_Generic         String? @db.VarChar
  Theorical                  String? @db.VarChar
  Practice                   String? @db.VarChar
  Scope_Indicators           String? @db.VarChar
  Value                      Int?
}

model GENERAL_DATA_SUBJECT {
  competence_theme         String  @id @db.VarChar
  id_init_data_subject     String? @db.VarChar
  id_subject_plan_relation String? @db.VarChar
}

model GRADES_CURRENT {
  id_grades_current Int     @id @default(autoincrement())
  id_course         String? @db.VarChar
  id_Competence     String? @db.VarChar
  id_student        String? @db.VarChar
  grade             Int?
  faults            Int?
  percentage        String? @db.VarChar
}

model GROUP {
  id_group                  String                      @id @db.VarChar
  id_teacher_number         String?                     @db.VarChar
  id_subject                String?                     @db.VarChar
  current_period            String?                     @db.VarChar
  group_capacity            String?                     @db.VarChar
  enrolled_students         String?                     @db.VarChar
  group_status              String?                     @db.VarChar
  classroom                 String?                     @db.VarChar
  TEACHER                   TEACHER?                    @relation(fields: [id_teacher_number], references: [id_teacher_number], onDelete: NoAction, onUpdate: NoAction)
  GROUP_ASSIGN_DATA_SUBJECT GROUP_ASSIGN_DATA_SUBJECT[]
  STUDENT_CURRENT_GROUP     STUDENT_CURRENT_GROUP[]
}

model GROUP_ASSIGN_DATA_SUBJECT {
  GROUP_id_group               String @db.VarChar
  ASSIGN_DATA_SUBJECT_id_group String @db.VarChar
  GROUP                        GROUP  @relation(fields: [GROUP_id_group], references: [id_group], onDelete: NoAction, onUpdate: NoAction)

  @@id([GROUP_id_group, ASSIGN_DATA_SUBJECT_id_group])
}

model GROUP_TAGS {
  id_group_tag String  @id @db.VarChar
  id_group     String? @db.VarChar
  name         String? @db.VarChar
}

model INITIAL_DATA_SUBJECT {
  id_init_data_subject                      String                                      @id @db.VarChar
  id_subject_plan_relation                  String?                                     @db.VarChar
  Characterization                          String?                                     @db.VarChar
  Didactics                                 String?                                     @db.VarChar
  Competence_specify                        String?                                     @db.VarChar
  INITIAL_DATA_SUBJECT_ASSIGN_DATA_SUBJECT  INITIAL_DATA_SUBJECT_ASSIGN_DATA_SUBJECT[]
  INITIAL_DATA_SUBJECT_GENERAL_DATA_SUBJECT INITIAL_DATA_SUBJECT_GENERAL_DATA_SUBJECT[]
}

model INITIAL_DATA_SUBJECT_ASSIGN_DATA_SUBJECT {
  INITIAL_DATA_SUBJECT_id_init_data_subject String               @db.VarChar
  ASSIGN_DATA_SUBJECT_id_init_data_subject  String               @db.VarChar
  INITIAL_DATA_SUBJECT                      INITIAL_DATA_SUBJECT @relation(fields: [INITIAL_DATA_SUBJECT_id_init_data_subject], references: [id_init_data_subject], onDelete: NoAction, onUpdate: NoAction, map: "INITIAL_DATA_SUBJECT_ASSIGN_D_INITIAL_DATA_SUBJECT_id_init_fkey")

  @@id([INITIAL_DATA_SUBJECT_id_init_data_subject, ASSIGN_DATA_SUBJECT_id_init_data_subject])
}

model INITIAL_DATA_SUBJECT_GENERAL_DATA_SUBJECT {
  INITIAL_DATA_SUBJECT_id_init_data_subject String               @db.VarChar
  GENERAL_DATA_SUBJECT_id_init_data_subject String               @db.VarChar
  INITIAL_DATA_SUBJECT                      INITIAL_DATA_SUBJECT @relation(fields: [INITIAL_DATA_SUBJECT_id_init_data_subject], references: [id_init_data_subject], onDelete: NoAction, onUpdate: NoAction, map: "INITIAL_DATA_SUBJECT_GENERAL__INITIAL_DATA_SUBJECT_id_init_fkey")

  @@id([INITIAL_DATA_SUBJECT_id_init_data_subject, GENERAL_DATA_SUBJECT_id_init_data_subject])
}

model JOB_DATA {
  id_job_data       Int     @id @default(autoincrement())
  id_teacher_number String? @db.VarChar
  plaza             String? @db.VarChar
  degree            String? @db.VarChar
  entry_date        String? @db.VarChar
  department        String? @db.VarChar
}

model PREVENTIVE_DATA {
  id_preventive_data     Int     @id @default(autoincrement())
  id_student             String? @db.VarChar
  id_nss                 String? @db.VarChar
  clinic                 String? @db.VarChar
  blood_type             String? @db.VarChar
  allergies              String? @db.VarChar
  disability             String? @db.VarChar
  psychological_problems String? @db.VarChar
}

model SCHEDULE {
  id_schedule String  @id @db.VarChar
  id_group    String? @db.VarChar
  days_week   String? @db.VarChar
  start_time  String? @db.VarChar
  end_time    String? @db.VarChar
}

model SCHOLAR_DATA {
  id_sd_number_control             String                             @id @db.VarChar
  id_student                       String?                            @db.VarChar
  school_prev                      String?                            @db.VarChar
  graduation_period                String?                            @db.VarChar
  validate_periods                 String?                            @db.VarChar
  current_period                   String?                            @db.VarChar
  accumulated_period               String?                            @db.VarChar
  status                           String?                            @db.VarChar
  SCHOLAR_DATA_ASSIGN_DATA_SUBJECT SCHOLAR_DATA_ASSIGN_DATA_SUBJECT[]
}

model SCHOLAR_DATA_ASSIGN_DATA_SUBJECT {
  SCHOLAR_DATA_id_sd_number_control        String       @db.VarChar
  ASSIGN_DATA_SUBJECT_id_sd_number_control String       @db.VarChar
  SCHOLAR_DATA                             SCHOLAR_DATA @relation(fields: [SCHOLAR_DATA_id_sd_number_control], references: [id_sd_number_control], onDelete: NoAction, onUpdate: NoAction, map: "SCHOLAR_DATA_ASSIGN_DATA_SUBJ_SCHOLAR_DATA_id_sd_number_co_fkey")

  @@id([SCHOLAR_DATA_id_sd_number_control, ASSIGN_DATA_SUBJECT_id_sd_number_control])
}

model STUDENT {
  id_student                    String                          @id @db.VarChar
  password                      String?                         @db.VarChar
  firstname                     String?                         @db.VarChar
  lasttname                     String?                         @db.VarChar
  id_career                     String?                         @db.VarChar
  CAREER                        CAREER?                         @relation(fields: [id_career], references: [id_career], onDelete: NoAction, onUpdate: NoAction)
  STUDENT_KARDEX_PLAN           STUDENT_KARDEX_PLAN[]
  STUDENT_STUDENT_CURRENT_GROUP STUDENT_STUDENT_CURRENT_GROUP[]
}

model STUDENT_CURRENT_GROUP {
  id_student_current_group Int     @id @default(autoincrement())
  id_student               String? @db.VarChar
  id_group                 String? @db.VarChar
  GROUP                    GROUP?  @relation(fields: [id_group], references: [id_group], onDelete: NoAction, onUpdate: NoAction)
}

model STUDENT_CURRENT_GROUP_APPLICANT {
  STUDENT_CURRENT_GROUP_id_student String @db.VarChar
  APPLICANT_id_student             String @db.VarChar

  @@id([STUDENT_CURRENT_GROUP_id_student, APPLICANT_id_student])
}

model STUDENT_CURRENT_GROUP_GRADES_CURRENT {
  STUDENT_CURRENT_GROUP_id_student String @db.VarChar
  GRADES_CURRENT_id_student        String @db.VarChar

  @@id([STUDENT_CURRENT_GROUP_id_student, GRADES_CURRENT_id_student])
}

model STUDENT_KARDEX_PLAN {
  id_kardex                String                 @id @db.VarChar
  id_subject_plan_relation String?                @db.VarChar
  id_student               String?                @db.VarChar
  study_plan               String?                @db.VarChar
  STUDENT                  STUDENT?               @relation(fields: [id_student], references: [id_student], onDelete: NoAction, onUpdate: NoAction)
  SUBJECT_PLAN_RELATION    SUBJECT_PLAN_RELATION? @relation(fields: [id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction)
}

model STUDENT_PERSONAL_DATA {
  id_student_personal_data Int     @id @default(autoincrement())
  id_student               String? @db.VarChar
  treet_name               String? @db.VarChar
  street_number            String? @db.VarChar
  city                     String? @db.VarChar
  CP                       String? @db.VarChar
  personal_email           String? @db.VarChar
  schoolar_email           String? @db.VarChar
}

model STUDENT_SEMESTER_DATA {
  id_student_semester String         @id @db.VarChar
  id_student          String?        @db.VarChar
  id_complementary    String?        @db.VarChar
  semester_number     String?        @db.VarChar
  partial             String?        @db.VarChar
  grade_obtained      String?        @db.VarChar
  COMPLEMENTARY       COMPLEMENTARY? @relation(fields: [id_complementary], references: [id_complementary], onDelete: NoAction, onUpdate: NoAction)
}

model STUDENT_STUDENT_CURRENT_GROUP {
  STUDENT_id_student               String  @db.VarChar
  STUDENT_CURRENT_GROUP_id_student String  @db.VarChar
  STUDENT                          STUDENT @relation(fields: [STUDENT_id_student], references: [id_student], onDelete: NoAction, onUpdate: NoAction)

  @@id([STUDENT_id_student, STUDENT_CURRENT_GROUP_id_student])
}

model STUDENT_TUTOR_DATA {
  id_student_tutor_data Int     @id @default(autoincrement())
  id_student            String? @db.VarChar
  firstname             String? @db.VarChar
  lasttname             String? @db.VarChar
  treet_name            String? @db.VarChar
  street_number         String? @db.VarChar
  city                  String? @db.VarChar
  CP                    String? @db.VarChar
  personal_email        String? @db.VarChar
  phone                 String? @db.VarChar
  workplace             String? @db.VarChar
}

model SUBJECT {
  id_subject                    String                          @id @db.VarChar
  subject_name                  String?                         @db.VarChar
  theoretical_hours             String?                         @db.VarChar
  practical_hours               String?                         @db.VarChar
  credits                       String?                         @db.VarChar
  syllabus                      String?                         @db.VarChar
  SUBJECT_GROUP                 SUBJECT_GROUP[]
  SUBJECT_SUBJECT_PLAN_RELATION SUBJECT_SUBJECT_PLAN_RELATION[]
}

model SUBJECT_GROUP {
  SUBJECT_id_subject String  @db.VarChar
  GROUP_id_subject   String  @db.VarChar
  SUBJECT            SUBJECT @relation(fields: [SUBJECT_id_subject], references: [id_subject], onDelete: NoAction, onUpdate: NoAction)

  @@id([SUBJECT_id_subject, GROUP_id_subject])
}

model SUBJECT_PLAN {
  id_subject_plan                    String                               @id @db.VarChar
  id_career                          String?                              @db.VarChar
  SUBJECT_PLAN_SUBJECT_PLAN_RELATION SUBJECT_PLAN_SUBJECT_PLAN_RELATION[]
}

model SUBJECT_PLAN_RELATION {
  id_subject_plan_relation                          String                                              @id @db.VarChar
  id_subject_plan                                   String?                                             @db.VarChar
  id_subject                                        String?                                             @db.VarChar
  semester                                          String?                                             @db.VarChar
  STUDENT_KARDEX_PLAN                               STUDENT_KARDEX_PLAN[]
  SUBJECT_PLAN_RELATION_ASSIGN_DATA_SUBJECT         SUBJECT_PLAN_RELATION_ASSIGN_DATA_SUBJECT[]
  SUBJECT_PLAN_RELATION_ASSIGN_GENERAL_DATA_SUBJECT SUBJECT_PLAN_RELATION_ASSIGN_GENERAL_DATA_SUBJECT[]
  SUBJECT_PLAN_RELATION_ASSIGN_INITIAL_DATA_SUBJECT SUBJECT_PLAN_RELATION_ASSIGN_INITIAL_DATA_SUBJECT[]
  SUBJECT_PLAN_RELATION_GENERAL_DATA_SUBJECT        SUBJECT_PLAN_RELATION_GENERAL_DATA_SUBJECT[]
  SUBJECT_PLAN_RELATION_INITIAL_DATA_SUBJECT        SUBJECT_PLAN_RELATION_INITIAL_DATA_SUBJECT[]
}

model SUBJECT_PLAN_RELATION_ASSIGN_DATA_SUBJECT {
  SUBJECT_PLAN_RELATION_id_subject_plan_relation String                @db.VarChar
  ASSIGN_DATA_SUBJECT_id_subject_plan_relation   String                @db.VarChar
  SUBJECT_PLAN_RELATION                          SUBJECT_PLAN_RELATION @relation(fields: [SUBJECT_PLAN_RELATION_id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_RELATION_ASSIGN__SUBJECT_PLAN_RELATION_id_sub_fkey")

  @@id([SUBJECT_PLAN_RELATION_id_subject_plan_relation, ASSIGN_DATA_SUBJECT_id_subject_plan_relation])
}

model SUBJECT_PLAN_RELATION_ASSIGN_GENERAL_DATA_SUBJECT {
  SUBJECT_PLAN_RELATION_id_subject_plan_relation       String                @db.VarChar
  ASSIGN_GENERAL_DATA_SUBJECT_id_subject_plan_relation String                @db.VarChar
  SUBJECT_PLAN_RELATION                                SUBJECT_PLAN_RELATION @relation(fields: [SUBJECT_PLAN_RELATION_id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_RELATION_ASSIGN_SUBJECT_PLAN_RELATION_id_sub_fkey2")

  @@id([SUBJECT_PLAN_RELATION_id_subject_plan_relation, ASSIGN_GENERAL_DATA_SUBJECT_id_subject_plan_relation])
}

model SUBJECT_PLAN_RELATION_ASSIGN_INITIAL_DATA_SUBJECT {
  SUBJECT_PLAN_RELATION_id_subject_plan_relation       String                @db.VarChar
  ASSIGN_INITIAL_DATA_SUBJECT_id_subject_plan_relation String                @db.VarChar
  SUBJECT_PLAN_RELATION                                SUBJECT_PLAN_RELATION @relation(fields: [SUBJECT_PLAN_RELATION_id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_RELATION_ASSIGN_SUBJECT_PLAN_RELATION_id_sub_fkey1")

  @@id([SUBJECT_PLAN_RELATION_id_subject_plan_relation, ASSIGN_INITIAL_DATA_SUBJECT_id_subject_plan_relation])
}

model SUBJECT_PLAN_RELATION_GENERAL_DATA_SUBJECT {
  SUBJECT_PLAN_RELATION_id_subject_plan_relation String                @db.VarChar
  GENERAL_DATA_SUBJECT_id_subject_plan_relation  String                @db.VarChar
  SUBJECT_PLAN_RELATION                          SUBJECT_PLAN_RELATION @relation(fields: [SUBJECT_PLAN_RELATION_id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_RELATION_GENERAL_SUBJECT_PLAN_RELATION_id_sub_fkey")

  @@id([SUBJECT_PLAN_RELATION_id_subject_plan_relation, GENERAL_DATA_SUBJECT_id_subject_plan_relation])
}

model SUBJECT_PLAN_RELATION_INITIAL_DATA_SUBJECT {
  SUBJECT_PLAN_RELATION_id_subject_plan_relation String                @db.VarChar
  INITIAL_DATA_SUBJECT_id_subject_plan_relation  String                @db.VarChar
  SUBJECT_PLAN_RELATION                          SUBJECT_PLAN_RELATION @relation(fields: [SUBJECT_PLAN_RELATION_id_subject_plan_relation], references: [id_subject_plan_relation], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_RELATION_INITIAL_SUBJECT_PLAN_RELATION_id_sub_fkey")

  @@id([SUBJECT_PLAN_RELATION_id_subject_plan_relation, INITIAL_DATA_SUBJECT_id_subject_plan_relation])
}

model SUBJECT_PLAN_SUBJECT_PLAN_RELATION {
  SUBJECT_PLAN_id_subject_plan          String       @db.VarChar
  SUBJECT_PLAN_RELATION_id_subject_plan String       @db.VarChar
  SUBJECT_PLAN                          SUBJECT_PLAN @relation(fields: [SUBJECT_PLAN_id_subject_plan], references: [id_subject_plan], onDelete: NoAction, onUpdate: NoAction, map: "SUBJECT_PLAN_SUBJECT_PLAN_REL_SUBJECT_PLAN_id_subject_plan_fkey")

  @@id([SUBJECT_PLAN_id_subject_plan, SUBJECT_PLAN_RELATION_id_subject_plan])
}

model SUBJECT_SUBJECT_PLAN_RELATION {
  SUBJECT_id_subject               String  @db.VarChar
  SUBJECT_PLAN_RELATION_id_subject String  @db.VarChar
  SUBJECT                          SUBJECT @relation(fields: [SUBJECT_id_subject], references: [id_subject], onDelete: NoAction, onUpdate: NoAction)

  @@id([SUBJECT_id_subject, SUBJECT_PLAN_RELATION_id_subject])
}

model TEACHER {
  id_teacher_number           String                        @id @db.VarChar
  password                    String?                       @db.VarChar
  firstname                   String?                       @db.VarChar
  lasttname                   String?                       @db.VarChar
  department                  String?                       @db.VarChar
  GROUP                       GROUP[]
  TEACHER_ASSIGN_DATA_SUBJECT TEACHER_ASSIGN_DATA_SUBJECT[]
}

model TEACHER_ASSIGN_DATA_SUBJECT {
  TEACHER_id_teacher_number             String  @db.VarChar
  ASSIGN_DATA_SUBJECT_id_teacher_number String  @db.VarChar
  TEACHER                               TEACHER @relation(fields: [TEACHER_id_teacher_number], references: [id_teacher_number], onDelete: NoAction, onUpdate: NoAction)

  @@id([TEACHER_id_teacher_number, ASSIGN_DATA_SUBJECT_id_teacher_number])
}

model TEACHER_PERSONAL_DATA {
  id_teacher_personal_data Int     @id @default(autoincrement())
  id_teacher_number        String? @db.VarChar
  street_name              String? @db.VarChar
  street_number            String? @db.VarChar
  city                     String? @db.VarChar
  CP                       String? @db.VarChar
  personal_email           String? @db.VarChar
  schoolar_email           String? @db.VarChar
}
